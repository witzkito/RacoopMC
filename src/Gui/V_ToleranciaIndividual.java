/*
 * V_ToleranciaIndividual
 *
 * Created on 5 de marzo de 2008, 09:21
 */

package Gui;

import Reportes.ReporteToleranciaIndividual;
import base.CensoEntrega;
import base.CensoEntregaInfo;
import base.CensoPlanInfo;
import base.CensoPlantacion;
import base.Empresa;
import base.Entrega;
import base.Socio;
import base.Variedad;
import db.DbRepToleranciaIndividual;
import java.text.DecimalFormat;
import java.util.Calendar;
import java.util.Iterator;
import javax.swing.ImageIcon;

/**
 *
 * @author  Usuario
 */
public class V_ToleranciaIndividual extends javax.swing.JFrame {
    
    private Empresa emp;
    private V_Principal principal;
    DecimalFormat format = new DecimalFormat();
    Variedad variedadSeteada;
    ReporteToleranciaIndividual v_rep;
        
        
    
    public V_ToleranciaIndividual(Empresa emp, V_Principal principal){
        this.emp = emp;
        this.principal = principal;
        initComponents();
        this.setLocationRelativeTo(this.getParent());
        format.setMinimumFractionDigits(2);
        format.setMaximumFractionDigits(2);
     
    }
    /** Creates new form V_VerCensado */
    public V_ToleranciaIndividual() {
        initComponents();
        format.setMinimumFractionDigits(2);
        format.setMaximumFractionDigits(2);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBusqueda = new javax.swing.JPanel();
        bttBuscar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtTemporada = new javax.swing.JTextField();
        Calendar cal = Calendar.getInstance();
        txtTemporada.setText(String.valueOf("Temporada " + (cal.get(Calendar.YEAR))));
        bttArriba = new javax.swing.JButton();
        bttAbajo = new javax.swing.JButton();
        rd1Año = new javax.swing.JRadioButton();
        rd2Años = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Tolerancia");
        setIconImage(this.emp.getOptions().getIcono().getImage());
        setResizable(false);

        pnlBusqueda.setBackground(this.emp.getOptions().getColor_form());
        pnlBusqueda.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(null, "Seleccion", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(0, 0, 0))));

        bttBuscar.setIcon(new ImageIcon("img/lupa.png"));
        bttBuscar.setText("Listar");
        bttBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttBuscar_Click(evt);
            }
        });

        jLabel1.setFont(this.emp.getOptions().getFontLbl());
        jLabel1.setText("Temporada");

        txtTemporada.setEditable(false);
        txtTemporada.setFont(this.emp.getOptions().getFontTxt());

        bttArriba.setIcon(new ImageIcon("img/fleArriba.gif"));
        bttArriba.setMinimumSize(new java.awt.Dimension(15, 10));
        bttArriba.setPreferredSize(new java.awt.Dimension(15, 10));
        bttArriba.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttArriba_Click(evt);
            }
        });

        bttAbajo.setIcon(new ImageIcon("img/fleAbajo.gif"));
        bttAbajo.setMargin(new java.awt.Insets(0, 0, 0, 0));
        bttAbajo.setMinimumSize(new java.awt.Dimension(15, 10));
        bttAbajo.setPreferredSize(new java.awt.Dimension(15, 10));
        bttAbajo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttAbajo_Click(evt);
            }
        });

        rd1Año.setBackground(this.emp.getOptions().getColor_form());
        rd1Año.setFont(this.emp.getOptions().getFontLbl());
        rd1Año.setText("1 Año");
        rd1Año.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rd1Año_Click(evt);
            }
        });

        rd2Años.setBackground(this.emp.getOptions().getColor_form());
        rd2Años.setFont(this.emp.getOptions().getFontLbl());
        rd2Años.setText("2 Año");
        rd2Años.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rd2Años_Click(evt);
            }
        });

        javax.swing.GroupLayout pnlBusquedaLayout = new javax.swing.GroupLayout(pnlBusqueda);
        pnlBusqueda.setLayout(pnlBusquedaLayout);
        pnlBusquedaLayout.setHorizontalGroup(
            pnlBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBusquedaLayout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTemporada, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bttAbajo, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bttArriba, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(112, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBusquedaLayout.createSequentialGroup()
                .addContainerGap(134, Short.MAX_VALUE)
                .addComponent(rd1Año, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rd2Años, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(122, 122, 122))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBusquedaLayout.createSequentialGroup()
                .addContainerGap(183, Short.MAX_VALUE)
                .addComponent(bttBuscar)
                .addGap(153, 153, 153))
        );
        pnlBusquedaLayout.setVerticalGroup(
            pnlBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBusquedaLayout.createSequentialGroup()
                .addGroup(pnlBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtTemporada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBusquedaLayout.createSequentialGroup()
                        .addComponent(bttArriba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(bttAbajo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(pnlBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rd1Año)
                    .addComponent(rd2Años))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(bttBuscar))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBusqueda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bttBuscar_Click(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttBuscar_Click
        String temporada = txtTemporada.getText().replace("Temporada ", "");
        Socio socio; CensoEntrega censoEnt; CensoPlantacion censoPla; Variedad va; int ciclo;
        DbRepToleranciaIndividual dbRep = new DbRepToleranciaIndividual(Empresa.con);
        dbRep.borrarAll();
        if (this.rd1Año.isSelected()){
            ciclo = 1;
        }else{
            ciclo = 2;
        }
        Iterator it = this.emp.getMapSocios().values().iterator();
        while (it.hasNext()){
            socio = (Socio)it.next();
            Iterator itVa = this.emp.getConf().getAllVariedades().values().iterator();
            if (socio.getEstado().equals("activo")){
               censoEnt = socio.getCensoEntrega(temporada);
               censoPla = socio.getCensoPlantacion(temporada);
               if (censoPla != null){
                   insertarDbRepCensoPla(socio, censoPla, ciclo, temporada);
               }else if (censoEnt != null ){
                   insertarDbRepCensoEnt(socio, censoEnt,  ciclo, temporada);
               }else{
                    instertarDbRepEnt(socio, ciclo, temporada);
                  
               }
            }
        }
        v_rep = new ReporteToleranciaIndividual(this.emp, "Tolerancia de " + ciclo + " ciclo, Temporada " + temporada, temporada);
        v_rep.run();
        
}//GEN-LAST:event_bttBuscar_Click

    private void insertarDbRepCensoPla(Socio unSocio, CensoPlantacion censo, int ciclo, String temporada){
        CensoPlanInfo censoInfo; CensoEntregaInfo censoEntre; double kgEntregado = 0; Entrega entAux;
        DbRepToleranciaIndividual dbRep = new DbRepToleranciaIndividual(Empresa.con);
        Iterator itEntrega; double kgCensoEntre = 0;
        Iterator it = censo.getAllInfo().values().iterator();
        while (it.hasNext()){
            censoInfo = (CensoPlanInfo)it.next();
            if (censoInfo.getAño() == ciclo){
                //Busqueda del censo Entrega
                kgCensoEntre = 0;
                if (unSocio.getCensoEntrega(new Integer(temporada)) != null){
                    censoEntre = unSocio.getCensoEntrega(new Integer(temporada)).getCensoEntregaInfo(censoInfo.getLote(), censoInfo.getVariedad(), ciclo);
                    if (censoEntre != null){
                        kgCensoEntre = censoEntre.getKg();
                    }
                }
                //Busqueda Entrega
                itEntrega = unSocio.getAllEntregas(temporada).values().iterator();
                kgEntregado = 0;
                while (itEntrega.hasNext()){
                    entAux = (Entrega)itEntrega.next();
                    if (entAux.getCiclo() == ciclo && entAux.getVariedad().getNombre().equals(censoInfo.getVariedad().getNombre())){
                        kgEntregado = kgEntregado + entAux.getKg();
                    }
                }
                dbRep.Insert(unSocio.getNroSocio(), unSocio.getNomApe(), censoInfo.getVariedad().getNombre(),
                        String.valueOf(censoInfo.getHectareas()), censoInfo.getLote(),
                        String.valueOf(new Double(censoInfo.getPorcentaje()).longValue()),
                        String.valueOf(new Double(kgCensoEntre).longValue()), String.valueOf(new Double(kgEntregado).longValue()),
                        traerTolerancia(kgEntregado, kgCensoEntre));
            }
        }
    }
    
    private void insertarDbRepCensoEnt(Socio unSocio, CensoEntrega censo, int ciclo, String temporada){
        CensoEntregaInfo censoEntre; double kgEntregado = 0; Entrega entAux;
        DbRepToleranciaIndividual dbRep = new DbRepToleranciaIndividual(Empresa.con);
        Iterator itEntrega; double kgCensoEntre = 0;
        Iterator it = censo.getAllCensoEntreInfo().values().iterator();
        while (it.hasNext()){
            censoEntre = (CensoEntregaInfo)it.next();
            if (censoEntre.getAño() == ciclo){
                itEntrega = unSocio.getAllEntregas(temporada).values().iterator();
                kgEntregado = 0;
                while (itEntrega.hasNext()){
                    entAux = (Entrega)itEntrega.next();
                    if (entAux.getCiclo() == ciclo && entAux.getVariedad().getNombre().equals(censoEntre.getVariedad().getNombre())){
                        kgEntregado = kgEntregado + entAux.getKg();
                    }
                }
                dbRep.Insert(unSocio.getNroSocio(), unSocio.getNomApe(), censoEntre.getVariedad().getNombre(),
                        String.valueOf(0), censoEntre.getLote(),
                        String.valueOf(0),
                        String.valueOf(new Double(censoEntre.getKg()).longValue()), String.valueOf(new Double(kgEntregado).longValue()),
                        traerTolerancia(kgEntregado, censoEntre.getKg()));
            }
        }
    }
    
    private void instertarDbRepEnt(Socio unSocio,int ciclo,String temporada){
        Entrega ent; double kgEntrega = 0; Variedad va;
        DbRepToleranciaIndividual dbRep = new DbRepToleranciaIndividual(Empresa.con);
        Iterator it;
        Iterator itVa = this.emp.getConf().getAllVariedades().values().iterator();
        while (itVa.hasNext()){
            va = (Variedad)itVa.next();
            kgEntrega = 0;
            it = unSocio.getAllEntregas(temporada).values().iterator();
            while (it.hasNext()){
                ent = (Entrega)it.next();
                if (ent.getCiclo() == ciclo && va.getNombre().equals(ent.getVariedad().getNombre())){
                    kgEntrega = kgEntrega + ent.getKg();
                }
            }
            if (kgEntrega != 0){
                dbRep.Insert(unSocio.getNroSocio(), unSocio.getNomApe(),va.getNombre(),
                            String.valueOf(0), " ",
                            String.valueOf(0),
                            String.valueOf(0), String.valueOf(new Double(kgEntrega).longValue()),
                            traerTolerancia(kgEntrega, 0));
            }
        }
        
        
    }
    
    
    private String traerTolerancia(double kgEntregado, double kgCensoEntre){
        if (kgEntregado == 0 && kgCensoEntre != 0){
            return "-100";
        }else if (kgEntregado != 0 && kgCensoEntre == 0){
            return "100";
        }else{
            return String.valueOf(new Double(((kgEntregado * 100)/kgCensoEntre) - 100).longValue());
        }  
    }
    
    private void bttArriba_Click(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttArriba_Click
        String temporada = txtTemporada.getText().replace("Temporada ", "");
        txtTemporada.setText(String.valueOf("Temporada " + (new Integer(temporada) + 1)));
        temporada = txtTemporada.getText().replace("Temporada ", "");
        
    }//GEN-LAST:event_bttArriba_Click

    private void bttAbajo_Click(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttAbajo_Click
        String temporada = txtTemporada.getText().replace("Temporada ", "");
        txtTemporada.setText(String.valueOf("Temporada " + (new Integer(temporada) - 1)));
        temporada = txtTemporada.getText().replace("Temporada ", "");
        
    }//GEN-LAST:event_bttAbajo_Click

    private void rd1Año_Click(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rd1Año_Click
        if (rd1Año.isSelected() && rd2Años.isSelected()){
            rd1Año.setSelected(false);
            rd2Años.setSelected(false);
        }
    }//GEN-LAST:event_rd1Año_Click

    private void rd2Años_Click(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rd2Años_Click
        if (rd1Año.isSelected() && rd2Años.isSelected()){
            rd1Año.setSelected(false);
            rd2Años.setSelected(false);
        }
    }//GEN-LAST:event_rd2Años_Click
 
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bttAbajo;
    private javax.swing.JButton bttArriba;
    private javax.swing.JButton bttBuscar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel pnlBusqueda;
    private javax.swing.JRadioButton rd1Año;
    private javax.swing.JRadioButton rd2Años;
    private javax.swing.JTextField txtTemporada;
    // End of variables declaration//GEN-END:variables
    
}
